#!/usr/bin/env bash

autocopy=0

if [ ! -x /usr/bin/curl ]; then
  printf "\n"
      echo "Install curl!"
  printf "\n"
      exit 1
fi

# Functions

usage() {
  filename=$(basename "$0")
  cat <<- EOF
Paste client

  Usage :

    -h    Print this usage
    -a    Enable autocopy in clipboard
    -t    Set extension

  Use a \$XDG_CONFIG_HOME/.paste.conf file to select a different paste
  service. List all URL choices there, one in each line. If a single URL
  is present that will be chosen. If more than one is present, a random
  working one will be chosen.

  Default is https://0x0.st/.

  Working instances are: https://x0.at/, https://ttm.sh/,
  https://0x0.st/, https://xzz.dk/, https://0.vern.cc/, https://envs.sh/
  and https://null.slipfox.xyz/.

  Examples:

      echo "Text here" | up
      cat file.[ext] | up [-t] [ext]
      up filename.[ext]

  Links are logged in \$XDG_CACHE_HOME/.paste

EOF
}

conf_dir=${XDG_CONFIG_HOME:-$HOME/.config}
cache_dir=${XDG_CACHE_HOME:-$HOME/.cache}

urlcheck(){
if [ -f "$conf_dir"/.paste.conf ]; then
  cat "$conf_dir"/.paste.conf |  while read url
    do
      curl -sf "$url" > /dev/null
      if [ ! $? = 6 ];then
        echo "$url is up"
        echo "$url" >> "$cache_dir"/.paste.tmp
      else
        echo "$url is down"
      fi
    done
  uploadurl=$(shuf -n 1 "$cache_dir"/.paste.tmp)
  echo "Choosing $uploadurl"
  rm -- "$cache_dir"/.paste.tmp
else
  uploadurl=https://0x0.st/
  echo "Choosing the default $uploadurl"
fi
}

upload(){
urlcheck
  if [ -n "$extension" ]; then
    ext="filename=.$extension"
  fi
    if [ -z "$1" ]; then
    file="file=@-"
    if [ -z "$ext" ]; then
      ext="filename=.txt"
    fi
  else
    file="file=@\"$1\""
  fi
  args="$file;$ext"
curl -sF "$args" "$uploadurl"|tee -a "$cache_dir"/.paste
}

autocopy(){
  if [ -n "$DISPLAY" ]; then
    if [ "$XDG_SESSION_TYPE" = "x11" ]; then
      if which xclip >/dev/null 2>&1; then
        echo "$1" | xclip
      fi
    fi
    if [ "$XDG_SESSION_TYPE" = "wayland" ]; then
      if which wl-copy >/dev/null 2>&1; then
        wl-copy -p "$1"
      fi
    fi
  fi
}

is_file(){
  if [ ! -f "$(realpath "$1")" ]; then
    echo "File \"$1\" does not exist or is not a regular file"
    exit 2
  fi
}

main(){
  if [ -t 0 ]; then
    if [ -z "$1" ]; then
      url=$(upload)
      printf "\n"
    else
      if [ -n "$1" ]; then
        is_file "$1"
      fi
      url=$(upload "$1")
    fi
  else
    if [ -n "$1" ]; then
      echo "Warning: ignoring file $1..."
    fi
    url=$(upload)
  fi
  echo "$url"
  if [ "$autocopy" = "1" ]; then
    autocopy "$url"
  fi
}

while getopts "hat:" arg
do
  case $arg in
    a)
      autocopy=1
      ;;
    h)
      usage
      exit
      ;;
    t)
      extension=${OPTARG}
      ;;
    *)
      usage
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))

main "$@"
